AWSTemplateFormatVersion: 2010-09-09
Description: Academy Demo CloudFormation
Parameters:
    LatestAmiId:
        Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
        Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    InstanceTypeParameter:
        Type: String
        Default: t2.micro
Resources:
    InstanssinSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Sample source security group
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: '80'
                  ToPort: '80'
                  SourceSecurityGroupId: !Ref LoadbalancerSG
    MyAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AvailabilityZones:
                - "us-east-1c"
                - "us-east-1d"
            LaunchConfigurationName: !Ref MyLaunchConfiguration
            MinSize: '1'
            MaxSize: '3'
            TargetGroupARNs:
                - Ref: V2TG
    MyLaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId: !Ref LatestAmiId
            InstanceType: !Ref InstanceTypeParameter
            SecurityGroups:
                - !Ref InstanssinSG
            UserData:
                Fn::Base64:
                    Fn::Join:
                        - "\n"
                        - - "#!/bin/bash"
                          - "amazon-linux-extras install epel"
                          - "amazon-linux-extras install nginx1"
                          - "systemctl start nginx"
    LoadbalancerSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: vpc-bcd4e6c6
            GroupDescription: Sample target security group
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: '80'
                  ToPort: '80'
                  CidrIp: 0.0.0.0/0
    MyLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Scheme: internet-facing
            Subnets:
                - subnet-7a917d5b
                - subnet-96e253db
            SecurityGroups:
                - !Ref LoadbalancerSG
    Kuuntelija:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref V2TG
            LoadBalancerArn: !Ref MyLoadBalancer
            Port: 80
            Protocol: "HTTP"
    V2TG:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            TargetType: instance
            Port: 80
            Protocol: "HTTP"
            VpcId: vpc-bcd4e6c6
    S3Bucket:
        Type: 'AWS::S3::Bucket'
        Properties:
            AccessControl: PublicRead
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: error.html
        DeletionPolicy: Retain
        Metadata:
            'AWS::CloudFormation::Designer':
                id: fd35610d-6d3e-49b1-8666-94d6d3babfe5
    BucketPolicy:
        Type: 'AWS::S3::BucketPolicy'
        Properties:
            PolicyDocument:
                Id: MyPolicy
                Version: 2012-10-17
                Statement:
                    - Sid: PublicReadForGetBucketObjects
                      Effect: Allow
                      Principal: '*'
                      Action: 's3:GetObject'
                      Resource: !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - !Ref S3Bucket
                            - /*
            Bucket: !Ref S3Bucket
        Metadata:
            'AWS::CloudFormation::Designer':
                id: 345b6099-3427-4f4e-8d64-7aa820cd2495
    SQSQ4OSYH:
        Type: 'AWS::SQS::Queue'
        Properties: {}
        Metadata:
            'AWS::CloudFormation::Designer':
                id: d344ac44-609c-44ec-a23f-a9383063727a
Outputs:
    WebsiteURL:
        Value: !GetAtt
            - S3Bucket
            - WebsiteURL
        Description: URL for website hosted on S3
    S3BucketSecureURL:
        Value: !Join
            - ''
            - - 'https://'
              - !GetAtt
                  - S3Bucket
                  - DomainName
        Description: lauribucket
    LoadBalancerDNSAddress:
        Value: !GetAtt MyLoadBalancer.DNSName